#!/usr/bin/env python3

import os
import envtpl
from mflog import get_logger
from mfplugin.manager import PluginsManager
from acquisition.switch_rules import RulesReader

MFDATA_PLUGIN_HOME = os.path.join(os.environ["MFMODULE_RUNTIME_HOME"],
                                  "var", "plugins")
LOGGER = get_logger("_make_switch_conf")


def make_switch_conf(plugin):
    log = LOGGER.bind(plugin=plugin)
    rules_path = "%s/switch_rules.ini" % plugin.home
    if not os.path.isfile(rules_path):
        return ""
    r = RulesReader()
    try:
        r.read(rules_path)
    except Exception as e:
        log.warning(
            "invalid rules file: %s => ignoring the plugin, details: %s" %
            (rules_path, e))
        return ""
    return envtpl.render_string("\n".join(r._raw_lines))


manager = PluginsManager()
for plugin in manager.plugins.values():
    try:
        plugin.load_full()
    except Exception as e:
        LOGGER.warning("invalid plugin: %s (%s) => ignoring it ; details: %s" %
                       (plugin.name, plugin.home, e))
        continue
    with plugin.plugin_env_context():
        tmp = make_switch_conf(plugin)
    if len(tmp) > 0:
        print("# <CONTRIBUTION OF %s PLUGIN>" % plugin.name)
        print(tmp)
        print("# </CONTRIBUTION OF %s PLUGIN>" % plugin.name)
        print()
