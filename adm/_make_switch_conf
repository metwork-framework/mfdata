#!/usr/bin/env python3

import os
import datetime
from mflog import get_logger
from mfplugin.manager import PluginsManager

MFDATA_PLUGIN_HOME = os.path.join(os.environ["MFMODULE_RUNTIME_HOME"],
                                  "var", "plugins")
MFMODULE_RUNTIME_HOME = os.environ["MFMODULE_RUNTIME_HOME"]
LOGGER = get_logger("_make_switch_conf")


def make_switch_conf(plugin, num):
    res = []
    rules = plugin.configuration.switch_rules
    for section in rules:
        res.append("[%s]" % section.replace("switch_rules:",
                                            "switch_rules_%i:" % num, 1))
        for key, value in rules[section].items():
            res.append("%s = %s" % (key, value))
    return "\n".join(res)


manager = PluginsManager()
num = 0
print("# GENERATED FILE")
print()
for plugin in manager.plugins.values():
    try:
        plugin.load_full()
    except Exception as e:
        LOGGER.warning("invalid plugin: %s (%s) => ignoring it ; details: %s" %
                       (plugin.name, plugin.home, e))
        continue
    with plugin.plugin_env_context():
        tmp = make_switch_conf(plugin, num)
    if len(tmp) > 0:
        print("# <CONTRIBUTION OF %s PLUGIN>" % plugin.name)
        print()
        print(tmp)
        print()
        print("# </CONTRIBUTION OF %s PLUGIN>" % plugin.name)
        print()
        print()
        num = num + 1
