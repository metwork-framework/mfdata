{% extends "circus.ini" %}

{% block custom %}
{% raw %}
[plugin:autorestart]                                                            
use = circus_autorestart_plugin.CircusAutorestartPlugin
stop_signal = 9
stop_children = True

{% if MFDATA_NGINX_FLAG == "1" %}
[watcher:nginx]
cmd=log_proxy_wrapper
args=--stdout {{MFMODULE_RUNTIME_HOME}}/log/nginx_access.log --stderr {{MFMODULE_RUNTIME_HOME}}/log/nginx_error.log -- {{MFEXT_HOME}}/opt/openresty/nginx/sbin/nginx -p {{MFMODULE_RUNTIME_HOME}}/tmp/nginx_tmp_prefix -c {{MFMODULE_RUNTIME_HOME}}/tmp/config_auto/nginx.conf
numprocesses=1
copy_env = True
autostart = True
respawn = True
max_retry = -1
hooks.before_start=mfext.circus_hooks.before_start_shell
hooks.after_stop=mfext.circus_hooks.after_stop_shell
working_dir = {{MFMODULE_RUNTIME_HOME}}/tmp
{% endif %}

[watcher:conf_monitor]                                                          
cmd=log_proxy_wrapper
args=--stdout {{MFMODULE_RUNTIME_HOME}}/log/conf_monitor.log --stderr STDOUT -- {{MFMODULE_HOME}}/bin/mfdata_conf_monitor.py                                         
args=                                                                           
numprocesses = 1                                                                
copy_env = True                                                                 
autostart = True                                                                
respawn = True           
max_retry = -1
working_dir = {{MFMODULE_RUNTIME_HOME}}/tmp
stop_signal = 9
hooks.before_start=mfext.circus_hooks.before_start_shell
hooks.after_stop=mfext.circus_hooks.after_stop_shell

[watcher:redis]
cmd=log_proxy_wrapper
args=--stdout {{MFMODULE_RUNTIME_HOME}}/log/redis.log --stderr STDOUT -- redis-server {{MFMODULE_RUNTIME_HOME}}/tmp/config_auto/redis.conf
numprocesses = 1
copy_env = True
autostart = True
respawn = True
max_retry = -1
hooks.before_start=mfext.circus_hooks.before_start_shell
working_dir = {{MFMODULE_RUNTIME_HOME}}/tmp

[watcher:directory_observer]
cmd=log_proxy_wrapper
args=--stdout {{MFMODULE_RUNTIME_HOME}}/log/directory_observer.log --stderr STDOUT -- python3 -m directory_observer.directory_observer --config={{MFMODULE_RUNTIME_HOME}}/tmp/config_auto/directory_observer.ini
numprocesses = 1
copy_env = True
autostart = True
respawn = True
max_retry = -1
hooks.before_start=mfext.circus_hooks.before_start_shell
working_dir = {{MFMODULE_RUNTIME_HOME}}/tmp

{% if MFDATA_ADMIN_HOSTNAME != "null" %}
[watcher:telegraf_collector_var_in_files_count]
cmd=log_proxy_wrapper
args=--stdout {{MFMODULE_RUNTIME_HOME}}/log/telegraf_collector_var_in_files_count.log --stderr STDOUT -- {{MFDATA_HOME}}/bin/telegraf_collector_var_in_files_count.py
numprocesses = 1
copy_env = True
autostart = True
respawn = True
max_retry = -1
working_dir = {{MFMODULE_RUNTIME_HOME}}/tmp
{% endif %}

{% for PLUGIN in PLUGINS %}
    {% for STEP in PLUGIN.steps %}

[watcher:step.{{PLUGIN.name}}.{{STEP.name}}]
cmd = log_proxy_wrapper
args = {{STEP.cmd_args}}
numprocesses = {{STEP.numprocesses}}
working_dir = {{PLUGIN.dir}}
copy_env = True
async_kill = True
autostart = {% if METWORK_STARTING|default("0") == "1" %}False{% else %}True{% endif %}
respawn = True
autorestart_kill_signal=2
graceful_timeout = {{STEP.timeout}}
max_retry = -1
mfdata_plugin = {{PLUGIN.name}}
{% if STEP.before_start %}
hooks.before_start = {{STEP.before_start}}
{% endif %}
{% if STEP.max_age > 0 -%}
max_age = {{STEP.max_age}}
max_age_variance = {{STEP.max_age}}

{% endif -%}
{% for key, value in STEP.rlimits.items()|sort() %}
rlimit_{{key}} = {{value}}
{% endfor %}

    {% endfor %}

    {% for EXTRA in PLUGIN.extra_daemons %}

[watcher:{{EXTRA.name}}]
cmd = log_proxy_wrapper
args = {{EXTRA.cmd_args}}
numprocesses = {{EXTRA.numprocesses}}
working_dir = {{PLUGIN.dir}}
copy_env = True
async_kill = True
autostart = {% if METWORK_STARTING|default("0") == "1" %}False{% else %}True{% endif %}
respawn = True
graceful_timeout = {{EXTRA.graceful_timeout}}
mfdata_plugin = {{PLUGIN.name}}
max_retry = -1
{% if EXTRA.max_age > 0 -%}
max_age = {{EXTRA.max_age}}
max_age_variance = {{EXTRA.max_age}}

{% endif -%}
{% for key, value in EXTRA.rlimits.items()|sort() %}
rlimit_{{key}} = {{value}}
{% endfor %}

    {% endfor %}
{% endfor %}

{% endraw %}
{% endblock %}
